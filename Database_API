################# API Flask with MySQL database connection ##################

from flask import Flask, request, jsonify
from flask_mysqldb import MySQL


app = Flask(__name__)
app.config['MYSQL_HOST'] = 'localhost'
app.config['MYSQL_USER'] = 'root'
app.config['MYSQL_PASSWORD'] = 'prakasam'
app.config['MYSQL_DB'] = 'api'
mysql = MySQL(app)


@app.route('/student', methods = ['GET'])
def get_data():
    cursor = mysql.connection.cursor()
    cursor.execute("select * from apidemo")
    data = cursor.fetchall()
    mysql.connection.commit()
    cursor.close()
    return jsonify(data)


@app.route('/student/<int:id>', methods = ['GET'])
def get_data_id(id):
    cursor = mysql.connection.cursor()
    cursor.execute("select * from apidemo where id = %s", (id,))
    data = cursor.fetchall()
    mysql.connection.commit()
    cursor.close()
    return jsonify(data)


@app.route('/student', methods = ['POST'])
def create_data():
    cursor = mysql.connection.cursor()
    name = request.json['name']
    age = request.json['age']
    cursor.execute("INSERT INTO apidemo(name, age) VALUES(%s,%s)", (name, age))
    mysql.connection.commit()
    cursor.close()
    return jsonify({'Message' : 'Data insert successfully'})


@app.route('/student/<int:id>', methods = ['PUT'])
def update_data(id):
    cursor = mysql.connection.cursor()
    name = request.json['name']
    age = request.json['age']
    cursor.execute("UPDATE apidemo SET name = %s, age = %s WHERE id = %s", (name, age, id))
    mysql.connection.commit()
    cursor.close()
    return jsonify({'message' : 'data updated successfully'})


@app.route('/student/<int:id>', methods = ['DELETE'])
def delete_data(id):
    cursor = mysql.connection.cursor()
    cursor.execute("DELETE FROM apidemo where id = %s", (id,))
    mysql.connection.commit()
    cursor.close()
    return jsonify({'Message' : 'Data deleted successfully'})


if __name__ == '__main__':
    app.run(debug=True)
